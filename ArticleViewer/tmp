//
//  Article.h
//  ArticleViewer
//
//  Created by Aleksey on 6/19/16.
//  Copyright © 2016 Aleksey. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <CoreData/CoreData.h>
#import "EasyMapping.h"

NS_ASSUME_NONNULL_BEGIN

@interface Article : EKManagedObjectModel <EKManagedMappingProtocol>

// Insert code here to declare functionality of your managed object subclass

+ (Article *)articleWithDictionary:(NSDictionary *)dictionary
inManagedObjectContext:(NSManagedObjectContext *)context;
+ (void)loadArticlesFromArray:(NSArray *)array
intoManagedObjectContext:(NSManagedObjectContext *)context;

@end

NS_ASSUME_NONNULL_END

#import "Article+CoreDataProperties.h"




//
//  Article.m
//  ArticleViewer
//
//  Created by Aleksey on 6/19/16.
//  Copyright © 2016 Aleksey. All rights reserved.
//

#import "Article.h"
#import "EKManagedObjectModel.h"

@implementation Article

// Insert code here to add functionality to your managed object subclass

+ (EKManagedObjectMapping *)objectMapping
{
EKManagedObjectMapping *mapping = [[EKManagedObjectMapping alloc] initWithEntityName:@"Article"];
[mapping mapPropertiesFromArray:@[@"id", @"title", @"image_medium", @"image_thumb", @"content_url"]];

return mapping;
}

+ (Article *)articleWithDictionary:(NSDictionary *)dictionary inManagedObjectContext:(NSManagedObjectContext *)context
{
Article *article = nil;

NSString *identifier = dictionary[@"id"];
NSFetchRequest *request = [NSFetchRequest fetchRequestWithEntityName:@"Article"];
request.predicate = [NSPredicate predicateWithFormat:@"id = %@", identifier];

NSError *error;
NSArray *matches = [context executeFetchRequest:request error:&error];

if (!matches || error || (matches.count > 1)) {
// handle error
} else if (matches.count) {
article = matches.firstObject;
} else {

// Mapping
article = [Article objectWithProperties:dictionary inContext:context];
article.web_page = [NSData dataWithContentsOfURL:[NSURL URLWithString:article.content_url]];
[cell.articleImageView sd_setImageWithURL:[NSURL URLWithString:article.image_thumb] placeholderImage:[UIImage imageNamed:@"def.png"] options:SDWebImageCacheMemoryOnly];

// Native mapping
/*
article = [NSEntityDescription insertNewObjectForEntityForName:@"Article" inManagedObjectContext:context];
article.title = dictionary[@"title"];
article.image_thumb = dictionary[@"image_thumb"];
article.image_medium = dictionary[@"image_medium"];
article.content_url = dictionary[@"content_url"];
*/
}

return article;
}

+ (void)loadArticlesFromArray:(NSArray *)array intoManagedObjectContext:(NSManagedObjectContext *)context
{
for (NSDictionary *article in array) {
[self articleWithDictionary:article inManagedObjectContext:context];
}
}

@end
